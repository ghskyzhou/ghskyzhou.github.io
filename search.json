[{"title":"Dynamic Programming","path":"/2025/02/10/Dynamic_Programming/","content":"C++ OI Code Brief Introduction Dynamic Programming (DP) is a problem-solving technique used to solve complex problems by breaking them down into simpler subproblems. It is particularly useful for optimization problems, where you need to find the best solution among many possibilities. The key idea behind DP is that instead of solving the same subproblem multiple times, you solve it once and store the result (usually in a table or array) for future reference. This technique avoids redundant calculations and improves efficiency, making it much faster than naive recursion. DP is typically used in problems with overlapping subproblems and optimal substructure, meaning the solution to the overall problem can be constructed from solutions to subproblems. Common applications include finding the shortest path, knapsack problems, longest common subsequences, and various combinatorial problems. There are two main approaches to DP: Top-down (Memoization): This involves solving the problem recursively and storing results of subproblems in a cache (usually an array or hash table). Bottom-up (Tabulation): This involves solving all subproblems starting from the smallest one and building up to the solution of the overall problem. Generated by ChatGPT DP is the most important algorithm to learn now. Codeforces DP Tutorial and Problem Listhttps://codeforces.com/blog/entry/67679 Classic Problems Stairs ProblemYou are climbing a staircase. It takes $N$ steps to reach to the top. Each time you can either climb 1 or 2 steps. And you can make most $K$ jumps. In how many distinct ways can you climb to the top? We have $N$ steps to take, and each step can be $k$(from $0$ to $K$) jumps. So we need to have a 2-dimensional dp array, let’s say $dp[i][k]$, with $i$ from $0$ to $N$, $k$ from $0$ to $K$. Moreover, the transition function will be $$dp[i][k] &#x3D; dp[i-1][k-1] + dp[i-2][k-1]$$for sure. And the answer will be $dp[N][K]$. Minimum Path SumGiven a grid of $n$ x $m$, find a path from the top-left to the bottom-right corner that minimizes the sum of numbers along the path. You can only move right or down. And you can’t make two consecutive steps down. For the grid walking we need a 2-dimensional array $s[i][j]$, but “can’t make two consecutive steps down” is also a state to consider. Thus, the array can be $dp[i][j][2]$, where $dp[i][j][0]$ refers to $s[i][j]$ and the previous step is “walking right”, similarily, $dp[i][j][1]$’s previous step is “walking down”. Therefore, the transition function will be$$dp[i][j][0] &#x3D; min(dp[i][j-1][0], dp[i][j-1][1]) + grid[i][j]$$and$$dp[i][j][1] &#x3D; dp[i-1][j][0] + grid[i][j]$$(because we can’t make two consecutive steps down). And the answer will be $min(dp[n][m][0], dp[n][m][1])$. In dynamic programming problems, you must think what is important so far after we made some decisions, after we already chose some numbers, or in graghs after we got to this vertex. Line of winesThere are $N$ wines in a row. Each year you sell either the leftmost or the rightmost wine. The $i^{th}$ wine has initial price $p[i]$ and price $k*p[i]$ in the $k^{th}$ year. What is the maximum possible total profit? Since the choose order will affect the profit, and each choose can’t be easily conclued by sorting, greedy is useless here and it won’t lead to an optimal solution. Considering the middle status, e.g. We have sold the $1^{st}$ and the $N^{th}$ wines after 2 years, remaining the $2^{nd}$ to the $(N-1)^{th}$ wines. So we have two variables $L$(remaining left), $R$(remaining right), and years past $Y$ will be easily calculated. We set the array as $dp[L][R]$. So the transition function will be $$dp[L][R] &#x3D; max(Y·p[R]+dp[L+1][R], Y·p[R]+dp[L][R-1])$$ One tricky thing here is to figure out in what order we should go through the states. The dp array should be initialized like $dp[i][i] &#x3D; p[i]*N$, which is the last wine’s score. And the answer will be $dp[1][N]$. 123456789101112for(int x = 1; x &lt;= N; x++) dp[x][x] = p[i] * N;for(int L = N; L &gt;= 1; L--)&#123; for(int R = L; R &lt;= N; R++) // This is a valid order &#123; int Y = N-(R-L+1); dp[L][R] = max(Y*p[R]+dp[L+1][R], Y*p[R]+dp[L][R-1]); &#125;&#125;cout &lt;&lt; dp[1][N] &lt;&lt; endl; // Answer","tags":["Code","C++","OI"],"categories":["Algorithm"]},{"title":"日本留学","path":"/2025/01/22/JPN_UTokyo/","content":"JPN CS 以东京大学为例 Examinations are held twice a year: Summer Entrance Examinations and Winter Entrance Examinations. 考试科目 Mathematics Linear Algebra Analysis (differential&#x2F;integral calculus, ordinary differential equations, etc.) Probability &#x2F; Statistics English TOEFL scores will be used and no written examinations Computer Science 情報数学 (Information Mathematics) 数値計算 (Numerical Algorithms) 離散数学 (Discrete Mathematics) アルゴリズムと計算量 (Algorithms and Complexity) 形式言語 (Formal Languages) 論理学 (Logic) プログラミング言語論 (Programming Languages) 計算機アーキテクチャ (Computer Architecture) デジタル回路 (Digital Circuit) オペレーティングシステム (Operating Systems) 機械学習 (Machine Learning) グラフィクス (Graphics) 自然言語処理 (Natural Language Processing) バイオインフォマティクス (Bioinformatics) コンピュータビジョン (Computer Vision) 申请需要文件 申请表格 Application Form 官网申请系统可以下载 成绩证明书 Academic Transcripts CUHKSZ GPA Form 学位证明 Certificate of Expected Graduation and Degree CUHKSZ Degree 托福分数 TOEFL Score 考试费 Examination Fee 3万円（1500人民币） 东大安全管制确认表 U-Tokyo Security Export Control Confirmation Form 时间线以28年10月入学为例，需要提前半年开始准备申请。 flowchart TD stg1[\"线上申请阶段 2028.5.31-2028.6.6\"] stg2[\"线下考试通知 2028.7.16\"] stg3[\"线下考试 2028.8.15-2028.8.26\"] stg4[\"考试通过通知 2028.9.2\"] stg5[\"准备入学 2028.10\"] stg1 --> stg2 stg2 --> stg3 stg3 --> stg4 stg4 --> stg5 研究计划书?","tags":["JPN","CS"],"categories":["Japanese"]},{"title":"日本語の勉強","path":"/2025/01/19/JPN_Main/","content":"JPN 为什么学日语？因为想考日本计算机科学进修生，想了解日本文化，有机会的话想在日本工作。 如何学日语？&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;日语学习方面。以网课为主，现在很多网课也比较廉价，但是一定要是给钱的，免费的肯定有水分在里面。自己看书的话一定是枯燥的，是个人都很难坚持下去。教授讲到语言学习，对于我们来说最重要的是听，尤其是现在18岁，非常年轻的阶段，语言学习一定是以听为主，以看为辅，背单词也是要听，更要读出来。大一开始学完全是可以的，至少大四达到N2及以上水平，日本的大学当然更喜欢用日语交流而不是英语。ChatGPT是个很好的工具，可以多问。–松永さん 学习日语的方法？一定要系统、详细地学，而不是碎片化的 ⭐⭐⭐⭐⭐ 北大《综合日语》微信公众号 《综合日语》公众号https://mp.weixin.qq.com/s?__biz=MzI0NzQ2ODEwOQ==&mid=2247500387&idx=1&sn=3058bf180b6171fdcf2b5d81796a6eb4&chksm=e9ad1b41deda9257600ba288ce32c5c84d0fd08b399cf0787f0e223cad69785a5125231c7589&scene=21#wechat_redirect ⭐⭐⭐⭐⭐ 北京大学《综合日语》 PDF已存 ⭐⭐⭐⭐ 《标准日本语》 电子版&#x2F;纸质版 ⭐⭐⭐⭐ 羊驼日语单词APP 需要每天背 ⭐⭐⭐ B站野生免费课程 ⭐⭐ 价格高昂的神秘课外班 言葉の勉強は日々の努力の積み重ねです 学习进度？我个人目前用的是北大的《综合日语》教材和公众号 JPN 《综合日语》第一册 正常 26% KR 第1-4课 五十音图和语音学习 第1课 あかさたな、声调第2课 はまやらわ、浊音和半浊音第3课 拨音、长音、促音第4课 拗音、数字 已完成 100% KR 第5课 新生活 ユニット１ はじめましてユニット２ 家族の写真ユニット３ 京華大学紹介 已完成 100% KR 第6课 キャンパス・スケジュール ユニット１ キャンパスユニット２ スケジュールユニット３ サークル情報 已完成 100% KR 第7课 日本語の勉強 ユニット１ 日本語学習ユニット２ユニット３ 正常 11% KR 第8课 ユニット１ユニット２ユニット３ 正常 0% KR 第9课 ユニット１ユニット２ユニット３ 正常 0% KR 第10课 ユニット１ユニット２ユニット３ 正常 0% KR 第11课 ユニット１ユニット２ユニット３ 正常 0% KR 第12课 ユニット１ユニット２ユニット３ 正常 0% KR 第13课 ユニット１ユニット２ユニット３ 正常 0% KR 第14课 ユニット１ユニット２ユニット３ 正常 0% KR 第15课 ユニット１ユニット２ユニット３ 正常 0%","tags":["JPN"],"categories":["Japanese"]},{"title":"Java Chat Room","path":"/2025/01/16/Java_Chat_Room/","content":"Java CS Code Made by Skyzhou IntelliJ IDEA Project Based on JavaFX, MySQL. An CUHKSZ CSC1004 Assignment (Link) Github Link : Java Chat Room NOT OPEN YET IntroductionA simple Java chatroom with GUI based on JavaFX. Two codes included. Server code running on local port 8023, with JDBC’s MySQL “jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;JavaChat”. Thread and socket are applied. Client code can be run for serval times, which are not conflicted with each other. Socket still using local port 8023. After entered the username you will be able to send messages in the chatroom, and ID will be assigned automatically. You can use “Ctrl + F” to start a search window in the client, where you can search for any messages or users sent before. The MySQL database is built on local MySQL. So you need to create a database JavaChat before starting the server code, and tables log and users are required. You can initialize the database like this (if you have MySQL): 1234CREATE DATABASE JavaChat;USE JavaChat;CREATE TABLE users(id INT, name VARCHAR(100));CREATE TABLE log(IND INT, text VARCHAR(1000)); After initialize the database, you can launch IDEA and open the project. Set your own JavaFX library. Run the server.java using IDEA’s run “Server”. Then run Main.java using IDEA’s run “Run JavaFX”. Functions Basic Features Multithreading Implementation Chat Room Functions Message Display Advanced Features Chat Record Storage Search Function Test images Thank Jake and SRQ for testing the code!","tags":["CS","Java","Code"],"categories":["Software"]},{"title":"Skyzhou's Luogu Blog","path":"/2025/01/15/Skyzhou_Luogu_Blog/","content":"C++ OI Code blog写多了之后发现洛谷这个专栏没有类似于列表图之类的分类方式，然后堆在一起查询起来也很慢，于是就有了现在这篇汇总 算法·理论 基础 快速排序 二分答案 快读&amp;快写 动态规划 归并排序与逆序对 图论 最短路 最小生成树 网络流 Tarjan 数据结构 二叉树&amp;多叉树 倍增&amp;LCA 线段树 ST表 树状数组 数学 快速幂&amp;矩阵快速幂 同余 字符串 哈希 前缀函数与KMP KMP字符串匹配 Trie字典树 AC自动机 其他 题解 P2783 有机化学之神偶尔会作弊 CSP-S 2022 策略游戏 CSP-S 2022 星战 游记 CSP2022游记 NOIP2022游记 ICPC2024昆明游记","tags":["Code","C++","OI"],"categories":["Algorithm"]},{"title":"Hello World","path":"/2025/01/14/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"Sky","path":"/about/index.html","content":"About Me 我是Sky 坐标广东，目前是大学生，主修Computer Science方向，喜欢没事干敲点东西 打过算法竞赛，但真的很菜 Social Media Codeforces Luogu Skyzhou666https://www.luogu.com.cn/user/713080 Steam Skyzhouhttps://steamcommunity.com/id/Skyzhou666/ Bilibili Skyzhou_https://space.bilibili.com/67500150 QQ 3178309197WX Skyzhou2 欢迎随便扩列"},{"title":"My Favorite Sites","path":"/favsites/index.html","content":"❤ W3schoolsProgram Learning東大CS書籍リストComputer ScienceJiumo Search电子书搜索Stellar WikiHexo Themeいらすとやフリー素材集日本の可愛いの素材东方狗下载站東方Project咕咕番免费在线看番宅方社ACG社区韩小韩WebAPI免费的API接口Sky的图床公开的哦~ gal的资源站太容易被干了就不放出来了"}]